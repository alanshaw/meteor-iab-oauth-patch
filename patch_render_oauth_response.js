var url = Npm.require("url")

OAuth._renderOauthResults = function(res, query, credentialSecret) {
	if (query.only_credential_secret_for_test) {
		res.writeHead(200, {'Content-Type': "text/html"})
		res.end(credentialSecret, "utf-8")
	} else if (query.error) {
		console.error("Error in OAuth Server: " + query.error)
		closePopup(res)
	} else if ('close' in query) {
		closePopup(res, query.state, credentialSecret)
	} else if (query.redirect) {
		var redirectHostname = url.parse(query.redirect).hostname
		var appHostname = url.parse(Meteor.absoluteUrl()).hostname
		if (appHostname === redirectHostname) {
			res.writeHead(302, {Location: query.redirect})
		} else {
			res.writeHead(400)
		}
		res.end()
	} else {
		res.writeHead(200, {'Content-Type': 'text/html'})
		res.end('', 'utf-8')
	}
}

function closePopup (res, state, credentialSecret) {
	var isSafe = function (value) {
		// This matches strings generated by `Random.secret` and
		// `Random.id`.
		return typeof value === "string" &&
			/^[a-zA-Z0-9\-_]+$/.test(value)
	}

	res.writeHead(200, {'Content-Type': 'text/html'})

	var setCredentialSecret = ''

	if (state && credentialSecret && isSafe(state) && isSafe(credentialSecret)) {
		setCredentialSecret = 'var credentialToken=' +
			JSON.stringify(state) + '; ' +
			'var credentialSecret=' +
			JSON.stringify(credentialSecret) + '; ' +
			'if (window.opener) ' +
			'window.opener.Package.oauth.OAuth._handleCredentialSecret(credentialToken,credentialSecret); ' +
			'else window.location.hash="credentialToken="+credentialToken+"&credentialSecret="+credentialSecret;'
	}

	var content =
		'<html><head><script>' +
		setCredentialSecret +
		'window.close()</script></head></html>'

	res.end(content, 'utf-8')
}